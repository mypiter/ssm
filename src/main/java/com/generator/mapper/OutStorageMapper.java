package com.generator.mapper;

import com.generator.pojo.ComplexQuery;
import com.generator.pojo.OutStorage;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface OutStorageMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table out_storage
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer purId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table out_storage
     *
     * @mbggenerated
     */
    int insert(OutStorage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table out_storage
     *
     * @mbggenerated
     */
    int insertSelective(OutStorage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table out_storage
     *
     * @mbggenerated
     */
    OutStorage selectByPrimaryKey(Integer purId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table out_storage
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(OutStorage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table out_storage
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(OutStorage record);
    //查询所有并分页
    List<OutStorage> select(@Param(value = "cur") int cur, @Param(value = "limit") int limit, @Param(value = "orderAccount")String orderAccount, @Param(value = "purchaseSpec")String purchaseSpec, @Param(value = "fluteType")String fluteType, @Param(value = "chang")String chang,@Param(value = "k")String k, @Param(value = "minNum")String minNum, @Param(value = "maxNum")String maxNum);
    //修改数量
    int updataOut(@Param(value = "purId") int purId, @Param(value = "rk") int rk);

    /**
     * 批量添加出库记录
     * @param list
     * @return
     */
    int addOutStoragerS(List<OutStorage> list);

    /**
     *  纸板出库记录报表  查询出所有的出库记录 分页
     * @param cur
     * @param rows
     * @param sort
     * @param order
     * @param queryList
     * @param startTime
     * @param endTime
     * @param orderAccount
     * @return
     */
    List<OutStorage> findByPurOut(@Param("cur") int cur,@Param("rows") int rows,@Param("sort") String sort,@Param("order") String order,@Param("list") List<ComplexQuery> queryList,@Param("startTime") String startTime, @Param("endTime") String endTime,@Param("orderAccount") String orderAccount);

    /**
     * 纸板出库记录报表  查询出所有的出库记录 查询全部
     * @param queryList
     * @param startTime
     * @param endTime
     * @param orderAccount
     * @return
     */
    List<OutStorage> findByPurOutAll(@Param("list") List<ComplexQuery> queryList,@Param("startTime") String startTime, @Param("endTime") String endTime,@Param("orderAccount") String orderAccount);

    /**
     * 初始化纸板出库批号
     * @param time1
     * @return
     */
    OutStorage getMaxOutStorAccount(@Param("time1") String time1);
}