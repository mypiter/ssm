package com.generator.mapper;

import com.generator.pojo.ComplexQuery;
import com.generator.pojo.Place;
import com.generator.pojo.ProductionList;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface PlaceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table place
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table place
     *
     * @mbggenerated
     */
    int insert(Place record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table place
     *
     * @mbggenerated
     */
    int insertSelective(Place record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table place
     *
     * @mbggenerated
     */
    Place selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table place
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Place record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table place
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Place record);

    /**
     * 查询出所有的待采购订单
     * @param page
     * @param limit
     * @return
     */
    List<Place> findByPurchase(@Param(value="page") int page,@Param(value = "limit") int limit);

    /**
     * 查询所有订单
     * @return
     */
    List<Place> findAll();
    /**
     * 根据订单号查询订单信息
     */
    Place selectById(@Param(value = "place_oder")String place_oder);

    /**
     * 修改订单的已采购总数
     * @param orderAccount
     * @param num
     */
    void updatePurNum(@Param(value = "orderAccount") String orderAccount,@Param(value = "num") int num);

    /**
     * 订单下拉框查询
     * @param q
     * @return
     */
    List<Place> dropSelectPlace(@Param(value = "q") String q);

    /**
     * 加载订单报表list   分页
     *
     * @param cur
     * @param rows
     * @param sort
     * @param order
     * @param queryList
     * @param startTime
     * @param endTime
     * @return
     */
    List<Place> loadPlaceList(@Param("cur") int cur,@Param("rows") int rows,@Param("sort") String sort,@Param("order") String order,@Param("list") List<ComplexQuery> queryList,@Param("startTime") String startTime, @Param("endTime") String endTime);

    /**
     *加载订单报表list     所有记录
     * @param queryList
     * @param startTime
     * @param endTime
     * @return
     */
    List<Place> loadPlaceListAll(@Param("list") List<ComplexQuery> queryList,@Param("startTime") String startTime,@Param("endTime") String endTime);

    /**
     * 批量删除订单
     * @param list
     * @return
     */
    int deletePlace(List<Place> list);

    /**
     * 下拉菜单查询
     * @param q
     * @return
     */
    List<Place> selects(@Param(value = "q") String q);

    List<Place> getListByPid(@Param(value = "customName") String customName);

    List<Place> getList(@Param(value = "q") String q, @Param(value = "customName") String customName);

    /**
     *生产单列表查询  分页查询
     * @param cur
     * @param rows
     * @return
     */
    List<ProductionList> findByProListPage(@Param("cur") int cur,@Param("rows") int rows);
    List<Place> findByProListP(@Param("cur") int cur,@Param("rows") int rows);
    /**
     * 生产单列表查询  查询全部
     * @return
     */
    List<ProductionList> findByProList();

    List<Place> getListByCustomName(@Param(value = "customName") String customName);

    Place getPlaceByOrderAccount(@Param(value = "orderAccount") String orderAccount);

    List<Place> getListByOrderAccount(@Param(value = "customName") String customName,@Param(value = "cartonName") String cartonName);

    /**
     * 根据客户名查询其所有的订单
     * @param customN
     * @return
     */
    List<Place> findByCustom(@Param("customN") String customN);

    /**
     * 获取数据库中当天的最大的订单号
     * @param time
     * @return
     */
    Place findByMaxAccount(@Param("time") String time);

    /**
     * 根据楞型id查找出含有list
     * @param i
     * @return
     */
    List<Place> findByPitId(@Param("i") int i);

    /**
     * 根据id获取批量订单数据
     * @param list
     * @return
     */
    List<Place> getListById(List<Place> list);

    List<Place> findByList();

    int updateById(@Param("id")int id);
}