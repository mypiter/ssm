<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.generator.mapper.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.generator.pojo.Admin" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="admin_name" property="adminName" jdbcType="VARCHAR" />
    <result column="admin_account" property="adminAccount" jdbcType="VARCHAR" />
    <result column="admin_password" property="adminPassword" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="motif" property="motif" jdbcType="INTEGER" />
    <result column="register_time" property="registerTime" jdbcType="VARCHAR" />
    <result column="fake" property="fake" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    admin_id, admin_name, admin_account, admin_password, level, motif, register_time, 
    fake
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from admin
    where admin_id = #{admin_id,jdbcType=INTEGER}
  </select>
  <select id="selectByAccount" resultType="com.generator.pojo.Admin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from admin
    where admin_account = #{account}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.generator.pojo.Admin" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into admin (admin_id, admin_name, admin_account, 
      admin_password, level, motif, 
      register_time, fake)
    values (#{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{adminAccount,jdbcType=VARCHAR}, 
      #{adminPassword,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{motif,jdbcType=INTEGER}, 
      #{registerTime,jdbcType=VARCHAR}, #{fake,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.generator.pojo.Admin" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminName != null" >
        admin_name,
      </if>
      <if test="adminAccount != null" >
        admin_account,
      </if>
      <if test="adminPassword != null" >
        admin_password,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="motif != null" >
        motif,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="fake != null" >
        fake,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminAccount != null" >
        #{adminAccount,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null" >
        #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="motif != null" >
        #{motif,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="fake != null" >
        #{fake,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.generator.pojo.Admin" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update admin
    <set >
      <if test="adminName != null" >
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminAccount != null" >
        admin_account = #{adminAccount,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null" >
        admin_password = #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="motif != null" >
        motif = #{motif,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="fake != null" >
        fake = #{fake,jdbcType=INTEGER},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.generator.pojo.Admin" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update admin
    set admin_name = #{adminName,jdbcType=VARCHAR},
      admin_account = #{adminAccount,jdbcType=VARCHAR},
      admin_password = #{adminPassword,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      motif = #{motif,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=VARCHAR},
      fake = #{fake,jdbcType=INTEGER}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>

  <select id="selectAdmin" resultType="com.generator.pojo.Admin">
    select
    <include refid="Base_Column_List" />
    from admin
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='adminId'">
              and admin_id
            </when>
            <when test="item.field=='adminName'">
              and admin_name
            </when>
            <when test="item.field=='adminAccount'">
              and admin_account
            </when>
            <when test="item.field=='adminPassword'">
              and admin_password
            </when>
            <when test="item.field=='level'">
              and level
            </when>
            <when test="item.field=='motif'">
              and motif
            </when>
            <when test="item.field=='registerTime'">
              and register_time
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
    </where>
    <if test="sort!=null and sort!=''">
      order by
      <choose>
        <when test="item.field=='adminId'">
          admin_id
        </when>
        <when test="item.field=='adminName'">
          admin_name
        </when>
        <when test="item.field=='adminAccount'">
          admin_account
        </when>
        <when test="item.field=='adminPassword'">
          admin_password
        </when>
        <when test="item.field=='level'">
          level
        </when>
        <when test="item.field=='motif'">
          motif
        </when>
        <when test="item.field=='registerTime'">
          register_time
        </when>
      </choose>
    </if>
    limit #{cur},#{rows}
  </select>
  <select id="selectAdminAll" resultType="com.generator.pojo.Admin">
    select
    <include refid="Base_Column_List" />
    from admin
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='adminId'">
              and admin_id
            </when>
            <when test="item.field=='adminName'">
              and admin_name
            </when>
            <when test="item.field=='adminAccount'">
              and admin_account
            </when>
            <when test="item.field=='adminPassword'">
              and admin_password
            </when>
            <when test="item.field=='level'">
              and level
            </when>
            <when test="item.field=='motif'">
              and motif
            </when>
            <when test="item.field=='registerTime'">
              and register_time
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
    </where>
  </select>
</mapper>