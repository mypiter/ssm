<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.generator.mapper.ReceiptRecordMapper">
  <resultMap id="BaseResultMap" type="com.generator.pojo.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="receipt_record_id" jdbcType="INTEGER" property="receiptRecordId" />
    <result column="custom_name" jdbcType="VARCHAR" property="customName" />
    <result column="receipt_money" jdbcType="DOUBLE" property="receiptMoney" />
    <result column="receipt_type" jdbcType="INTEGER" property="receiptType" />
    <result column="receipt_remarks" jdbcType="VARCHAR" property="receiptRemarks" />
    <result column="receipt_acceptance_ticket" jdbcType="VARCHAR" property="receiptAcceptanceTicket" />
    <result column="receipt_acceptance_date" jdbcType="TIMESTAMP" property="receiptAcceptanceDate" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="receipt_time" jdbcType="TIMESTAMP" property="receiptTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    receipt_record_id, custom_name, receipt_money, receipt_type, receipt_remarks, receipt_acceptance_ticket, 
    receipt_acceptance_date, flag, receipt_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from receipt_record
    where receipt_record_id = #{receiptRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from receipt_record
    where receipt_record_id = #{receiptRecordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.generator.pojo.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into receipt_record (receipt_record_id, custom_name, receipt_money, 
      receipt_type, receipt_remarks, receipt_acceptance_ticket, 
      receipt_acceptance_date, flag, receipt_time
      )
    values (#{receiptRecordId,jdbcType=INTEGER}, #{customName,jdbcType=VARCHAR}, #{receiptMoney,jdbcType=DOUBLE}, 
      #{receiptType,jdbcType=INTEGER}, #{receiptRemarks,jdbcType=VARCHAR}, #{receiptAcceptanceTicket,jdbcType=VARCHAR}, 
      #{receiptAcceptanceDate,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER}, #{receiptTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.generator.pojo.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into receipt_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receiptRecordId != null">
        receipt_record_id,
      </if>
      <if test="customName != null">
        custom_name,
      </if>
      <if test="receiptMoney != null">
        receipt_money,
      </if>
      <if test="receiptType != null">
        receipt_type,
      </if>
      <if test="receiptRemarks != null">
        receipt_remarks,
      </if>
      <if test="receiptAcceptanceTicket != null">
        receipt_acceptance_ticket,
      </if>
      <if test="receiptAcceptanceDate != null">
        receipt_acceptance_date,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="receiptTime != null">
        receipt_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receiptRecordId != null">
        #{receiptRecordId,jdbcType=INTEGER},
      </if>
      <if test="customName != null">
        #{customName,jdbcType=VARCHAR},
      </if>
      <if test="receiptMoney != null">
        #{receiptMoney,jdbcType=DOUBLE},
      </if>
      <if test="receiptType != null">
        #{receiptType,jdbcType=INTEGER},
      </if>
      <if test="receiptRemarks != null">
        #{receiptRemarks,jdbcType=VARCHAR},
      </if>
      <if test="receiptAcceptanceTicket != null">
        #{receiptAcceptanceTicket,jdbcType=VARCHAR},
      </if>
      <if test="receiptAcceptanceDate != null">
        #{receiptAcceptanceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="receiptTime != null">
        #{receiptTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.generator.pojo.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receipt_record
    <set>
      <if test="customName != null">
        custom_name = #{customName,jdbcType=VARCHAR},
      </if>
      <if test="receiptMoney != null">
        receipt_money = #{receiptMoney,jdbcType=DOUBLE},
      </if>
      <if test="receiptType != null">
        receipt_type = #{receiptType,jdbcType=INTEGER},
      </if>
      <if test="receiptRemarks != null">
        receipt_remarks = #{receiptRemarks,jdbcType=VARCHAR},
      </if>
      <if test="receiptAcceptanceTicket != null">
        receipt_acceptance_ticket = #{receiptAcceptanceTicket,jdbcType=VARCHAR},
      </if>
      <if test="receiptAcceptanceDate != null">
        receipt_acceptance_date = #{receiptAcceptanceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="receiptTime != null">
        receipt_time = #{receiptTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where receipt_record_id = #{receiptRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.generator.pojo.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receipt_record
    set custom_name = #{customName,jdbcType=VARCHAR},
      receipt_money = #{receiptMoney,jdbcType=DOUBLE},
      receipt_type = #{receiptType,jdbcType=INTEGER},
      receipt_remarks = #{receiptRemarks,jdbcType=VARCHAR},
      receipt_acceptance_ticket = #{receiptAcceptanceTicket,jdbcType=VARCHAR},
      receipt_acceptance_date = #{receiptAcceptanceDate,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER},
      receipt_time = #{receiptTime,jdbcType=TIMESTAMP}
    where receipt_record_id = #{receiptRecordId,jdbcType=INTEGER}
  </update>

  <select id="select" resultType="com.generator.pojo.ReceiptRecord">
    select
    <include refid="Base_Column_List" />
    from receipt_record
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='receiptRecordId'">
              and receipt_record_id
            </when>
            <when test="item.field=='customName'">
              and custom_name
            </when>
            <when test="item.field=='receiptMoney'">
              and receipt_money
            </when>
            <when test="item.field=='receiptType'">
              and receipt_type
            </when>
            <when test="item.field=='receiptAcceptanceTicket'">
              and receipt_acceptance_ticket
            </when>
            <when test="item.field=='receiptAcceptanceDate'">
              and receipt_acceptance_date
            </when>
            <when test="item.field=='receiptTime'">
              and receipt_time
            </when>
            <when test="item.field=='receiptRemarks'">
            and receipt_remarks
          </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <if test="startTime!=null and startTime!=''">
        and receipt_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and receipt_time&lt;=#{endTime}
      </if>
      and flag=0
    </where>
    <if test="sort!=null and sort!=''">
      order by
      <choose>
        <when test="sort=='receiptRecordId'">
          receipt_record_id
        </when>
        <when test="sort=='customName'">
          custom_name
        </when>
        <when test="sort=='receiptMoney'">
          receipt_money
        </when>
        <when test="sort=='receiptType'">
          receipt_type
        </when>
        <when test="sort=='receiptAcceptanceTicket'">
          receipt_acceptance_ticket
        </when>
        <when test="sort=='receiptAcceptanceDate'">
          receipt_acceptance_date
        </when>
        <when test="sort=='receiptTime'">
          receipt_time
        </when>
        <when test="sort=='receiptRemarks'">
          receipt_remarks
        </when>
      </choose>
      <choose>
        <when test="order=='ase'">
          asc
        </when>
        <when test="order=='desc'">
          desc
        </when>
      </choose>
    </if>
    limit #{cur},#{rows}
  </select>
  <select id="selectAll" resultType="com.generator.pojo.ReceiptRecord">
    select
    <include refid="Base_Column_List" />
    from receipt_record
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='receiptRecordId'">
              and receipt_record_id
            </when>
            <when test="item.field=='customName'">
              and custom_name
            </when>
            <when test="item.field=='receiptMoney'">
              and receipt_money
            </when>
            <when test="item.field=='receiptType'">
              and receipt_type
            </when>
            <when test="item.field=='receiptAcceptanceTicket'">
              and receipt_acceptance_ticket
            </when>
            <when test="item.field=='receiptAcceptanceDate'">
              and receipt_acceptance_date
            </when>
            <when test="item.field=='receiptTime'">
              and receipt_time
            </when>
            <when test="item.field=='receiptRemarks'">
              and receipt_remarks
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <if test="startTime!=null and startTime!=''">
        and receipt_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and receipt_time&lt;=#{endTime}
      </if>
      and flag=0
    </where>
  </select>
</mapper>