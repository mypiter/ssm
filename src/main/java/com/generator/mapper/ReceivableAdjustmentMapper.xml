<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.generator.mapper.ReceivableAdjustmentMapper">
  <resultMap id="BaseResultMap" type="com.generator.pojo.ReceivableAdjustment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="receivable_adjustment_id" jdbcType="INTEGER" property="receivableAdjustmentId" />
    <result column="receivable_adjustment_remarks" jdbcType="VARCHAR" property="receivableAdjustmentRemarks" />
    <result column="receivable_adjustment_date" jdbcType="TIMESTAMP" property="receivableAdjustmentDate" />
    <result column="receivable_adjustment_price" jdbcType="DOUBLE" property="receivableAdjustmentPrice" />
    <result column="receivable_adjustment_after_price" jdbcType="DOUBLE" property="receivableAdjustmentAfterPrice" />
    <result column="receivable_adjustment_total" jdbcType="DOUBLE" property="receivableAdjustmentTotal" />
    <result column="receivable_adjustment_after_total" jdbcType="DOUBLE" property="receivableAdjustmentAfterTotal" />
    <result column="receivable_adjustment_type" jdbcType="DOUBLE" property="receivableAdjustmentType" />
    <result column="order_account" jdbcType="VARCHAR" property="orderAccount" />
    <result column="custom_name" jdbcType="VARCHAR" property="customName" />
    <result column="carton_name" jdbcType="VARCHAR" property="cartonName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    receivable_adjustment_id, receivable_adjustment_remarks, receivable_adjustment_date, 
    receivable_adjustment_price, receivable_adjustment_after_price, receivable_adjustment_total, 
    receivable_adjustment_after_total, receivable_adjustment_type, order_account, custom_name, carton_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from receivable_adjustment
    where receivable_adjustment_id = #{receivableAdjustmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from receivable_adjustment
    where receivable_adjustment_id = #{receivableAdjustmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.generator.pojo.ReceivableAdjustment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into receivable_adjustment (receivable_adjustment_id, receivable_adjustment_remarks, 
      receivable_adjustment_date, receivable_adjustment_price, 
      receivable_adjustment_after_price, receivable_adjustment_total, 
      receivable_adjustment_after_total, receivable_adjustment_type,
      order_account, custom_name, carton_name)
    values (#{receivableAdjustmentId,jdbcType=INTEGER}, #{receivableAdjustmentRemarks,jdbcType=VARCHAR}, 
      #{receivableAdjustmentDate,jdbcType=TIMESTAMP}, #{receivableAdjustmentPrice,jdbcType=DOUBLE}, 
      #{receivableAdjustmentAfterPrice,jdbcType=DOUBLE}, #{receivableAdjustmentTotal,jdbcType=DOUBLE}, 
      #{receivableAdjustmentAfterTotal,jdbcType=DOUBLE}, #{receivableAdjustmentType,jdbcType=DOUBLE}, 
      #{orderAccount,jdbcType=VARCHAR}, #{customName,jdbcType=VARCHAR}, #{cartonName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.generator.pojo.ReceivableAdjustment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into receivable_adjustment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receivableAdjustmentId != null">
        receivable_adjustment_id,
      </if>
      <if test="receivableAdjustmentRemarks != null">
        receivable_adjustment_remarks,
      </if>
      <if test="receivableAdjustmentDate != null">
        receivable_adjustment_date,
      </if>
      <if test="receivableAdjustmentPrice != null">
        receivable_adjustment_price,
      </if>
      <if test="receivableAdjustmentAfterPrice != null">
        receivable_adjustment_after_price,
      </if>
      <if test="receivableAdjustmentTotal != null">
        receivable_adjustment_total,
      </if>
      <if test="receivableAdjustmentAfterTotal != null">
        receivable_adjustment_after_total,
      </if>
      <if test="receivableAdjustmentType != null">
        receivable_adjustment_type,
      </if>
      <if test="orderAccount != null">
        order_account,
      </if>
      <if test="customName != null">
        custom_name,
      </if>
      <if test="cartonName != null">
        carton_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receivableAdjustmentId != null">
        #{receivableAdjustmentId,jdbcType=INTEGER},
      </if>
      <if test="receivableAdjustmentRemarks != null">
        #{receivableAdjustmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="receivableAdjustmentDate != null">
        #{receivableAdjustmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receivableAdjustmentPrice != null">
        #{receivableAdjustmentPrice,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentAfterPrice != null">
        #{receivableAdjustmentAfterPrice,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentTotal != null">
        #{receivableAdjustmentTotal,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentAfterTotal != null">
        #{receivableAdjustmentAfterTotal,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentType != null">
        #{receivableAdjustmentType,jdbcType=DOUBLE},
      </if>
      <if test="orderAccount != null">
        #{orderAccount,jdbcType=VARCHAR},
      </if>
      <if test="customName != null">
        #{customName,jdbcType=VARCHAR},
      </if>
      <if test="cartonName != null">
        #{cartonName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.generator.pojo.ReceivableAdjustment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receivable_adjustment
    <set>
      <if test="receivableAdjustmentRemarks != null">
        receivable_adjustment_remarks = #{receivableAdjustmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="receivableAdjustmentDate != null">
        receivable_adjustment_date = #{receivableAdjustmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receivableAdjustmentPrice != null">
        receivable_adjustment_price = #{receivableAdjustmentPrice,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentAfterPrice != null">
        receivable_adjustment_after_price = #{receivableAdjustmentAfterPrice,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentTotal != null">
        receivable_adjustment_total = #{receivableAdjustmentTotal,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentAfterTotal != null">
        receivable_adjustment_after_total = #{receivableAdjustmentAfterTotal,jdbcType=DOUBLE},
      </if>
      <if test="receivableAdjustmentType != null">
        receivable_adjustment_type = #{receivableAdjustmentType,jdbcType=DOUBLE},
      </if>
      <if test="orderAccount != null">
        orderAccount = #{orderAccount,jdbcType=VARCHAR},
      </if>
      <if test="customName != null">
        custom_name =#{customName,jdbcType=VARCHAR},
      </if>
      <if test="cartonName != null">
        carton_name =#{cartonName,jdbcType=VARCHAR}
      </if>
    </set>
    where receivable_adjustment_id = #{receivableAdjustmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.generator.pojo.ReceivableAdjustment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receivable_adjustment
    set receivable_adjustment_remarks = #{receivableAdjustmentRemarks,jdbcType=VARCHAR},
      receivable_adjustment_date = #{receivableAdjustmentDate,jdbcType=TIMESTAMP},
      receivable_adjustment_price = #{receivableAdjustmentPrice,jdbcType=DOUBLE},
      receivable_adjustment_after_price = #{receivableAdjustmentAfterPrice,jdbcType=DOUBLE},
      receivable_adjustment_total = #{receivableAdjustmentTotal,jdbcType=DOUBLE},
      receivable_adjustment_after_total = #{receivableAdjustmentAfterTotal,jdbcType=DOUBLE},
      receivable_adjustment_type = #{receivableAdjustmentType,jdbcType=DOUBLE},
      orderAccount = #{orderAccount,jdbcType=VARCHAR},
      custom_name =#{customName,jdbcType=VARCHAR},
      carton_name =#{cartonName,jdbcType=VARCHAR}
    where receivable_adjustment_id = #{receivableAdjustmentId,jdbcType=INTEGER}
  </update>
  <select id="loadReceivableList" resultType="com.generator.pojo.ReceivableAdjustment">
    select
    <include refid="Base_Column_List" />
    from receivable_adjustment
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='receivableAdjustmentId'">
              and receivable_adjustment_id
            </when>
            <when test="item.field=='orderAccount'">
              and order_account
            </when>
            <when test="item.field=='customName'">
              and custom_name
            </when>
            <when test="item.field=='cartonName'">
              and carton_name
            </when>
            <when test="item.field=='receivableAdjustmentDate'">
              and receivable_adjustment_date
            </when>
            <when test="item.field=='receivableAdjustmentPrice'">
              and receivable_adjustment_price
            </when>
            <when test="item.field=='receivableAdjustmentAfterPrice'">
              and receivable_adjustment_after_price
            </when>
            <when test="item.field=='receivableAdjustmentTotal'">
              and receivable_adjustment_total
            </when>
            <when test="item.field=='receivableAdjustmentAfterTotal'">
              and receivable_adjustment_after_total
            </when>
            <when test="item.field=='receivableAdjustmentType'">
              and receivable_adjustment_type
            </when>
            <when test="item.field=='receivableAdjustmentRemarks'">
              and receivable_adjustment_remarks
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <!--<if test="startTime!=null and startTime!=''">
        and deli_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and deli_time&lt;=#{endTime}
      </if>-->
    </where>
    <if test="sort!=null and sort!=''">
      order by
      <choose>
        <when test="sort=='receivableAdjustmentId'">
          receivable_adjustment_id
        </when>
        <when test="sort=='orderAccount'">
          order_account
        </when>
        <when test="sort=='customName'">
          custom_name
        </when>
        <when test="sort=='cartonName'">
          carton_name
        </when>
        <when test="sort=='receivableAdjustmentDate'">
          receivable_adjustment_date
        </when>
        <when test="sort=='receivableAdjustmentPrice'">
          receivable_adjustment_price
        </when>
        <when test="sort=='receivableAdjustmentAfterPrice'">
          receivable_adjustment_after_price
        </when>
        <when test="sort=='receivableAdjustmentTotal'">
          receivable_adjustment_total
        </when>
        <when test="sort=='receivableAdjustmentAfterTotal'">
          receivable_adjustment_after_total
        </when>
        <when test="sort=='receivableAdjustmentType'">
          receivable_adjustment_type
        </when>
        <when test="sort=='receivableAdjustmentRemarks'">
          receivable_adjustment_remarks
        </when>
      </choose>
      <choose>
        <when test="order=='ase'">
          asc
        </when>
        <when test="order=='desc'">
          desc
        </when>
      </choose>
    </if>
    limit #{cur},#{rows}
  </select>

  <select id="loadReceivableListAll" resultType="com.generator.pojo.ReceivableAdjustment">
    select
    <include refid="Base_Column_List" />
    from receivable_adjustment
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='receivableAdjustmentId'">
              and receivable_adjustment_id
            </when>
            <when test="item.field=='orderAccount'">
              and order_account
            </when>
            <when test="item.field=='customName'">
              and custom_name
            </when>
            <when test="item.field=='cartonName'">
              and carton_name
            </when>
            <when test="item.field=='receivableAdjustmentDate'">
              and receivable_adjustment_date
            </when>
            <when test="item.field=='receivableAdjustmentPrice'">
              and receivable_adjustment_price
            </when>
            <when test="item.field=='receivableAdjustmentAfterPrice'">
              and receivable_adjustment_after_price
            </when>
            <when test="item.field=='receivableAdjustmentTotal'">
              and receivable_adjustment_total
            </when>
            <when test="item.field=='receivableAdjustmentAfterTotal'">
              and receivable_adjustment_after_total
            </when>
            <when test="item.field=='receivableAdjustmentType'">
              and receivable_adjustment_type
            </when>
            <when test="item.field=='receivableAdjustmentRemarks'">
              and receivable_adjustment_remarks
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <!--<if test="startTime!=null and startTime!=''">
        and deli_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and deli_time&lt;=#{endTime}
      </if>-->
    </where>
  </select>

</mapper>