package com.generator.mapper;

import com.generator.pojo.CartonOutInfo;
import com.generator.pojo.CartonRecord;
import com.generator.pojo.ComplexQuery;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface  CartonOutInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carton_out_info
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carton_out_info
     *
     * @mbggenerated
     */
    int insert(CartonOutInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carton_out_info
     *
     * @mbggenerated
     */
    int insertSelective(CartonOutInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carton_out_info
     *
     * @mbggenerated
     */
    CartonOutInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carton_out_info
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CartonOutInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table carton_out_info
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(CartonOutInfo record);

    List<CartonOutInfo>selectAll();

    List<CartonOutInfo>selectByQ(@Param(value="q")String q);

    List<CartonOutInfo> selectByDnumbers(String [] deliveryNumber);
    CartonOutInfo selectByDnumber(@Param(value="deliveryNumber")String deliveryNumber);
    int updataByNum(@Param(value="deliveryNumber")String deliveryNumber);


    List<CartonOutInfo>selectA(@Param("cur") int cur, @Param("rows") int rows, @Param("sort") String sort, @Param("order") String order, @Param("list") List<ComplexQuery> queryList, @Param("startTime") String startTime, @Param("endTime") String endTime);

    List<CartonOutInfo> selectAl( @Param("list") List<ComplexQuery> queryList, @Param("bSecondedCustomerString")String bSecondedCustomerString, @Param("startTime") String startTime, @Param("endTime") String endTime);

    List<CartonOutInfo> selects(@Param(value="q") String q);

    List<CartonOutInfo> getListByPid(@Param(value="customName") String customName);

    List<CartonOutInfo> getList();

    CartonOutInfo findById(@Param(value="deliveryNumber") String deliveryNumber);

    List<CartonOutInfo> getListByCus(@Param(value="customName")String customName);

    List<CartonOutInfo> getListB();

    CartonOutInfo findByMaxAccount(@Param("time")String time);

    //查询配送完成的客户
    List<CartonOutInfo> select();

    int updataByid(@Param("id")int id,@Param("deliveryStyle") String deliveryStyle);
}