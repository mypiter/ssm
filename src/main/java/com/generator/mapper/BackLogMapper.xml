<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.generator.mapper.BackLogMapper" >
    <resultMap id="BaseResultMap" type="com.generator.pojo.BackLog" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="last_time" property="lastTime" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, order_num, name, state, description, last_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List" />
        from backlog
        where admin_id = #{id,jdbcType=INTEGER}
    </select>

    <select id="select" resultType="com.generator.pojo.BackLog">
        select
        <include refid="Base_Column_List" />
        from backlog
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from backlog
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.generator.pojo.BackLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into backlog (id, order_num, name,
        state, description,last_time)
        values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{state,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},#{lastTime,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.generator.pojo.BackLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into backlog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="lastTime != null">
                last_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderNum != null">
                #{order_num,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="lastTime != null">
                #{last_time,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <select id="findPaperList" resultType="com.generator.pojo.BackLog">
        select
        <include refid="Base_Column_List" />
        from backlog
        <where>
            <if test="list!=null">
                <foreach collection="list" item="item" separator=",">
                    <choose>
                        <when test="item.field=='id'">
                            and id
                        </when>
                        <when test="item.field=='orderNum'">
                            and order_num
                        </when>
                        <when test="item.field=='name'">
                            and name
                        </when>
                        <when test="item.field=='state'">
                            and state
                        </when>
                        <when test="item.field=='description'">
                            and description
                        </when>
                        <when test="item.field=='lastTime'">
                            and last_time
                        </when>
                    </choose>
                    <choose>
                        <when test="item.op=='contains'">
                            like "%"#{item.value}"%"
                        </when>
                        <when test="item.op=='equal'">
                            =#{item.value}
                        </when>
                        <when test="item.op=='notequal'">
                            &lt;&gt;#{item.value}
                        </when>
                        <when test="item.op=='greater'">
                            &gt;#{item.value}
                        </when>
                        <when test="item.op=='greaterorequal'">
                            &gt;=#{item.value}
                        </when>
                        <when test="item.op=='less'">
                            &lt;#{item.value}
                        </when>
                        <when test="item.op=='lessorequal'">
                            &lt;=#{item.value}
                        </when>
                        <when test="item.op=='beginwith'">
                            like #{item.value}"%"
                        </when>
                        <when test="item.op=='endwith'">
                            like "%"#{item.value}
                        </when>
                    </choose>
                </foreach>
            </if>
        </where>
        order by
        <if test="sort==null or sort==''">
            id desc
        </if>
        <if test="sort!=null and sort!=''">
            <choose>
                <when test="sort=='id'">
                    id
                </when>
                <when test="sort=='orderNum'">
                    order_num
                </when>
                <when test="sort=='name'">
                    name
                </when>
                <when test="sort=='state'">
                    state
                </when>
                <when test="sort=='description'">
                    description
                </when>
                <when test="sort=='lastTime'">
                    last_time
                </when>
            </choose>
            <choose>
                <when test="order=='ase'">
                    asc
                </when>
                <when test="order=='desc'">
                    desc
                </when>
            </choose>
        </if>
        limit #{cur},#{rows}
    </select>



    <select id="findPaperListAll" resultType="com.generator.pojo.BackLog">
        select
        <include refid="Base_Column_List" />
        from backlog
        <where>
            <if test="list!=null">
                <foreach collection="list" item="item" separator=",">
                    <choose>
                        <when test="sort=='id'">
                            id
                        </when>
                        <when test="sort=='orderNum'">
                            order_num
                        </when>
                        <when test="sort=='name'">
                            name
                        </when>
                        <when test="sort=='state'">
                            state
                        </when>
                        <when test="sort=='description'">
                            description
                        </when>
                        <when test="sort=='lastTime'">
                            last_time
                        </when>
                    </choose>

                    <choose>
                        <when test="item.op=='contains'">
                            like "%"#{item.value}"%"
                        </when>
                        <when test="item.op=='equal'">
                            =#{item.value}
                        </when>
                        <when test="item.op=='notequal'">
                            &lt;&gt;#{item.value}
                        </when>
                        <when test="item.op=='greater'">
                            &gt;#{item.value}
                        </when>
                        <when test="item.op=='greaterorequal'">
                            &gt;=#{item.value}
                        </when>
                        <when test="item.op=='less'">
                            &lt;#{item.value}
                        </when>
                        <when test="item.op=='lessorequal'">
                            &lt;=#{item.value}
                        </when>
                        <when test="item.op=='beginwith'">
                            like #{item.value}"%"
                        </when>
                        <when test="item.op=='endwith'">
                            like "%"#{item.value}
                        </when>
                    </choose>
                </foreach>
            </if>

        </where>
    </select>
</mapper>