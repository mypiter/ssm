package com.generator.mapper;

import com.generator.pojo.TicketProduct;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface TicketProductMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_product
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer ticketProductId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_product
     *
     * @mbggenerated
     */
    int insert(TicketProduct record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_product
     *
     * @mbggenerated
     */
    int insertSelective(TicketProduct record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_product
     *
     * @mbggenerated
     */
    TicketProduct selectByPrimaryKey(Integer ticketProductId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_product
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TicketProduct record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_product
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TicketProduct record);

    /**
     * 根据发票id 加载发票的货物详情      分页查询
     * @param cur
     * @param rows
     * @param sort
     * @param order
     * @param tick
     * @return
     */
    List<TicketProduct> findByTicketProduct(@Param("cur") int cur,@Param("rows")  int rows,@Param("sort")  String sort,@Param("order")  String order,@Param("tick") int tick);

    /**
     * 根据发票id 加载发票的货物详情      查询全部
     * @param tick
     * @return
     */
    List<TicketProduct> findByTicketProductAll(@Param("tick") int tick);


    int addTP(@Param(value = "list") List<TicketProduct> list);

    /**
     * 批量假删除发票货物详情  根据发票id
     * @param listPro
     * @return
     */
    int updateFakes(List<TicketProduct> listPro);
}