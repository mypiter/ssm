<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.generator.mapper.MaterialStorageMapper">
  <resultMap id="BaseResultMap" type="com.generator.pojo.MaterialStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="making_storage_id" jdbcType="INTEGER" property="makingStorageId" />
    <result column="making_name" jdbcType="VARCHAR" property="makingName" />
    <result column="storage_spec" jdbcType="VARCHAR" property="storageSpec" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="storage_name" jdbcType="VARCHAR" property="storageName" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="fake" jdbcType="INTEGER" property="fake" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    making_storage_id, making_name, storage_spec, num, price, total, time, storage_name, 
    type, fake
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from material_storage
    where making_storage_id = #{makingStorageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from material_storage
    where making_storage_id = #{makingStorageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.generator.pojo.MaterialStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into material_storage (making_storage_id, making_name, storage_spec, 
      num, price, total, time, 
      storage_name, type, fake
      )
    values (#{makingStorageId,jdbcType=INTEGER}, #{makingName,jdbcType=VARCHAR}, #{storageSpec,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{total,jdbcType=DOUBLE}, #{time,jdbcType=VARCHAR}, 
      #{storageName,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{fake,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.generator.pojo.MaterialStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into material_storage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="makingStorageId != null">
        making_storage_id,
      </if>
      <if test="makingName != null">
        making_name,
      </if>
      <if test="storageSpec != null">
        storage_spec,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="storageName != null">
        storage_name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="fake != null">
        fake,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="makingStorageId != null">
        #{makingStorageId,jdbcType=INTEGER},
      </if>
      <if test="makingName != null">
        #{makingName,jdbcType=VARCHAR},
      </if>
      <if test="storageSpec != null">
        #{storageSpec,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="storageName != null">
        #{storageName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="fake != null">
        #{fake,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.generator.pojo.MaterialStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update material_storage
    <set>
      <if test="makingName != null">
        making_name = #{makingName,jdbcType=VARCHAR},
      </if>
      <if test="storageSpec != null">
        storage_spec = #{storageSpec,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="storageName != null">
        storage_name = #{storageName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="fake != null">
        fake = #{fake,jdbcType=INTEGER},
      </if>
    </set>
    where making_storage_id = #{makingStorageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.generator.pojo.MaterialStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update material_storage
    set making_name = #{makingName,jdbcType=VARCHAR},
      storage_spec = #{storageSpec,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      total = #{total,jdbcType=DOUBLE},
      time = #{time,jdbcType=VARCHAR},
      storage_name = #{storageName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      fake = #{fake,jdbcType=INTEGER}
    where making_storage_id = #{makingStorageId,jdbcType=INTEGER}
  </update>
</mapper>