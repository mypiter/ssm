<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.generator.mapper.PaymenttRecordMapper">
  <resultMap id="BaseResultMap" type="com.generator.pojo.PaymenttRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="payment_record_id" jdbcType="INTEGER" property="paymentRecordId" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="payment_money" jdbcType="DOUBLE" property="paymentMoney" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="payment_remarks" jdbcType="VARCHAR" property="paymentRemarks" />
    <result column="payment_acceptance_ticket" jdbcType="VARCHAR" property="paymentAcceptanceTicket" />
    <result column="payment_acceptance_date" jdbcType="TIMESTAMP" property="paymentAcceptanceDate" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    payment_record_id, supplier_name, payment_money, payment_type, payment_remarks, payment_acceptance_ticket, 
    payment_acceptance_date, flag, payment_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from paymentt_record
    where payment_record_id = #{paymentRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from paymentt_record
    where payment_record_id = #{paymentRecordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.generator.pojo.PaymenttRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into paymentt_record (payment_record_id, supplier_name, payment_money, 
      payment_type, payment_remarks, payment_acceptance_ticket, 
      payment_acceptance_date, flag, payment_time
      )
    values (#{paymentRecordId,jdbcType=INTEGER}, #{supplierName,jdbcType=VARCHAR}, #{paymentMoney,jdbcType=DOUBLE}, 
      #{paymentType,jdbcType=INTEGER}, #{paymentRemarks,jdbcType=VARCHAR}, #{paymentAcceptanceTicket,jdbcType=VARCHAR}, 
      #{paymentAcceptanceDate,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.generator.pojo.PaymenttRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into paymentt_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentRecordId != null">
        payment_record_id,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="paymentMoney != null">
        payment_money,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="paymentRemarks != null">
        payment_remarks,
      </if>
      <if test="paymentAcceptanceTicket != null">
        payment_acceptance_ticket,
      </if>
      <if test="paymentAcceptanceDate != null">
        payment_acceptance_date,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentRecordId != null">
        #{paymentRecordId,jdbcType=INTEGER},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="paymentMoney != null">
        #{paymentMoney,jdbcType=DOUBLE},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="paymentRemarks != null">
        #{paymentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="paymentAcceptanceTicket != null">
        #{paymentAcceptanceTicket,jdbcType=VARCHAR},
      </if>
      <if test="paymentAcceptanceDate != null">
        #{paymentAcceptanceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.generator.pojo.PaymenttRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update paymentt_record
    <set>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="paymentMoney != null">
        payment_money = #{paymentMoney,jdbcType=DOUBLE},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="paymentRemarks != null">
        payment_remarks = #{paymentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="paymentAcceptanceTicket != null">
        payment_acceptance_ticket = #{paymentAcceptanceTicket,jdbcType=VARCHAR},
      </if>
      <if test="paymentAcceptanceDate != null">
        payment_acceptance_date = #{paymentAcceptanceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_record_id = #{paymentRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.generator.pojo.PaymenttRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update paymentt_record
    set supplier_name = #{supplierName,jdbcType=VARCHAR},
      payment_money = #{paymentMoney,jdbcType=DOUBLE},
      payment_type = #{paymentType,jdbcType=INTEGER},
      payment_remarks = #{paymentRemarks,jdbcType=VARCHAR},
      payment_acceptance_ticket = #{paymentAcceptanceTicket,jdbcType=VARCHAR},
      payment_acceptance_date = #{paymentAcceptanceDate,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP}
    where payment_record_id = #{paymentRecordId,jdbcType=INTEGER}
  </update>

  <select id="select" resultType="com.generator.pojo.PaymenttRecord">
    select
    <include refid="Base_Column_List" />
    from paymentt_record
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='paymentRecordId'">
              and payment_record_id
            </when>
            <when test="item.field=='supplierName'">
              and supplier_name
            </when>
            <when test="item.field=='paymentMoney'">
              and payment_money
            </when>
            <when test="item.field=='paymentType'">
              and payment_type
            </when>
            <when test="item.field=='paymentAcceptanceTicket'">
              and payment_acceptance_ticket
            </when>
            <when test="item.field=='paymentAcceptanceDate'">
              and payment_acceptance_date
            </when>
            <when test="item.field=='paymentTime'">
              and payment_time
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <if test="startTime!=null and startTime!=''">
        and payment_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and payment_time&lt;=#{endTime}
      </if>
      and flag=0
    </where>
    <if test="sort!=null and sort!=''">
      order by
      <choose>
        <when test="sort=='paymentRecordId'">
          payment_record_id
        </when>
        <when test="sort=='supplierName'">
          supplier_name
        </when>
        <when test="sort=='paymentMoney'">
          payment_money
        </when>
        <when test="sort=='paymentType'">
          payment_type
        </when>
        <when test="sort=='paymentAcceptanceTicket'">
          payment_acceptance_ticket
        </when>
        <when test="sort=='paymentAcceptanceDate'">
          payment_acceptance_date
        </when>
        <when test="sort=='paymentTime'">
          payment_time
        </when>
      </choose>
      <choose>
        <when test="order=='ase'">
          asc
        </when>
        <when test="order=='desc'">
          desc
        </when>
      </choose>
    </if>
    limit #{cur},#{rows}
  </select>
  <select id="selectAll" resultType="com.generator.pojo.PaymenttRecord">
    select
    <include refid="Base_Column_List" />
    from paymentt_record
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='paymentRecordId'">
              and payment_record_id
            </when>
            <when test="item.field=='supplierName'">
              and supplier_name
            </when>
            <when test="item.field=='paymentMoney'">
              and payment_money
            </when>
            <when test="item.field=='paymentType'">
              and payment_type
            </when>
            <when test="item.field=='paymentAcceptanceTicket'">
              and payment_acceptance_ticket
            </when>
            <when test="item.field=='paymentAcceptanceDate'">
              and payment_acceptance_date
            </when>
            <when test="item.field=='paymentTime'">
              and payment_time
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <if test="startTime!=null and startTime!=''">
        and payment_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and payment_time&lt;=#{endTime}
      </if>
      and flag=0
    </where>
  </select>
</mapper>