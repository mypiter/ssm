<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.generator.mapper.PurRejectedMapper">
  <resultMap id="BaseResultMap" type="com.generator.pojo.PurRejected">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="rejected_id" jdbcType="INTEGER" property="rejectedId" />
    <result column="order_account" jdbcType="VARCHAR" property="orderAccount" />
    <result column="batch_number" jdbcType="VARCHAR" property="batchNumber" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supper_spec" jdbcType="VARCHAR" property="supperSpec" />
    <result column="material_name" jdbcType="VARCHAR" property="materialName" />
    <result column="pit_type" jdbcType="VARCHAR" property="pitType" />
    <result column="blanking_size" jdbcType="VARCHAR" property="blankingSize" />
    <result column="width_line" jdbcType="VARCHAR" property="widthLine" />
    <result column="line_type" jdbcType="INTEGER" property="lineType" />
    <result column="pur_price" jdbcType="DOUBLE" property="purPrice" />
    <result column="materials_number" jdbcType="INTEGER" property="materialsNumber" />
    <result column="rejected_num" jdbcType="INTEGER" property="rejectedNum" />
    <result column="compensate_money" jdbcType="DOUBLE" property="compensateMoney" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="cause_of_return" jdbcType="VARCHAR" property="causeOfReturn" />
    <result column="rejected_remarks" jdbcType="VARCHAR" property="rejectedRemarks" />
    <result column="registrant" jdbcType="VARCHAR" property="registrant" />
    <result column="rejected_time" jdbcType="VARCHAR" property="rejectedTime" />
    <result column="fake" jdbcType="INTEGER" property="fake" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    rejected_id, order_account, batch_number, supplier_name, supper_spec, material_name, 
    pit_type, blanking_size, width_line, line_type, pur_price, materials_number, rejected_num, 
    compensate_money, money, cause_of_return, rejected_remarks, registrant, rejected_time, 
    fake
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from pur_rejected
    where rejected_id = #{rejectedId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pur_rejected
    where rejected_id = #{rejectedId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.generator.pojo.PurRejected">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pur_rejected (rejected_id, order_account, batch_number, 
      supplier_name, supper_spec, material_name, 
      pit_type, blanking_size, width_line, 
      line_type, pur_price, materials_number, 
      rejected_num, compensate_money, money, 
      cause_of_return, rejected_remarks, registrant, 
      rejected_time, fake)
    values (#{rejectedId,jdbcType=INTEGER}, #{orderAccount,jdbcType=VARCHAR}, #{batchNumber,jdbcType=VARCHAR}, 
      #{supplierName,jdbcType=VARCHAR}, #{supperSpec,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, 
      #{pitType,jdbcType=VARCHAR}, #{blankingSize,jdbcType=VARCHAR}, #{widthLine,jdbcType=VARCHAR}, 
      #{lineType,jdbcType=INTEGER}, #{purPrice,jdbcType=DOUBLE}, #{materialsNumber,jdbcType=INTEGER}, 
      #{rejectedNum,jdbcType=INTEGER}, #{compensateMoney,jdbcType=DOUBLE}, #{money,jdbcType=DOUBLE}, 
      #{causeOfReturn,jdbcType=VARCHAR}, #{rejectedRemarks,jdbcType=VARCHAR}, #{registrant,jdbcType=VARCHAR}, 
      #{rejectedTime,jdbcType=VARCHAR}, #{fake,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.generator.pojo.PurRejected">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pur_rejected
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rejectedId != null">
        rejected_id,
      </if>
      <if test="orderAccount != null">
        order_account,
      </if>
      <if test="batchNumber != null">
        batch_number,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="supperSpec != null">
        supper_spec,
      </if>
      <if test="materialName != null">
        material_name,
      </if>
      <if test="pitType != null">
        pit_type,
      </if>
      <if test="blankingSize != null">
        blanking_size,
      </if>
      <if test="widthLine != null">
        width_line,
      </if>
      <if test="lineType != null">
        line_type,
      </if>
      <if test="purPrice != null">
        pur_price,
      </if>
      <if test="materialsNumber != null">
        materials_number,
      </if>
      <if test="rejectedNum != null">
        rejected_num,
      </if>
      <if test="compensateMoney != null">
        compensate_money,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="causeOfReturn != null">
        cause_of_return,
      </if>
      <if test="rejectedRemarks != null">
        rejected_remarks,
      </if>
      <if test="registrant != null">
        registrant,
      </if>
      <if test="rejectedTime != null">
        rejected_time,
      </if>
      <if test="fake != null">
        fake,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rejectedId != null">
        #{rejectedId,jdbcType=INTEGER},
      </if>
      <if test="orderAccount != null">
        #{orderAccount,jdbcType=VARCHAR},
      </if>
      <if test="batchNumber != null">
        #{batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supperSpec != null">
        #{supperSpec,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="pitType != null">
        #{pitType,jdbcType=VARCHAR},
      </if>
      <if test="blankingSize != null">
        #{blankingSize,jdbcType=VARCHAR},
      </if>
      <if test="widthLine != null">
        #{widthLine,jdbcType=VARCHAR},
      </if>
      <if test="lineType != null">
        #{lineType,jdbcType=INTEGER},
      </if>
      <if test="purPrice != null">
        #{purPrice,jdbcType=DOUBLE},
      </if>
      <if test="materialsNumber != null">
        #{materialsNumber,jdbcType=INTEGER},
      </if>
      <if test="rejectedNum != null">
        #{rejectedNum,jdbcType=INTEGER},
      </if>
      <if test="compensateMoney != null">
        #{compensateMoney,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="causeOfReturn != null">
        #{causeOfReturn,jdbcType=VARCHAR},
      </if>
      <if test="rejectedRemarks != null">
        #{rejectedRemarks,jdbcType=VARCHAR},
      </if>
      <if test="registrant != null">
        #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="rejectedTime != null">
        #{rejectedTime,jdbcType=VARCHAR},
      </if>
      <if test="fake != null">
        #{fake,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.generator.pojo.PurRejected">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pur_rejected
    <set>
      <if test="orderAccount != null">
        order_account = #{orderAccount,jdbcType=VARCHAR},
      </if>
      <if test="batchNumber != null">
        batch_number = #{batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supperSpec != null">
        supper_spec = #{supperSpec,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="pitType != null">
        pit_type = #{pitType,jdbcType=VARCHAR},
      </if>
      <if test="blankingSize != null">
        blanking_size = #{blankingSize,jdbcType=VARCHAR},
      </if>
      <if test="widthLine != null">
        width_line = #{widthLine,jdbcType=VARCHAR},
      </if>
      <if test="lineType != null">
        line_type = #{lineType,jdbcType=INTEGER},
      </if>
      <if test="purPrice != null">
        pur_price = #{purPrice,jdbcType=DOUBLE},
      </if>
      <if test="materialsNumber != null">
        materials_number = #{materialsNumber,jdbcType=INTEGER},
      </if>
      <if test="rejectedNum != null">
        rejected_num = #{rejectedNum,jdbcType=INTEGER},
      </if>
      <if test="compensateMoney != null">
        compensate_money = #{compensateMoney,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="causeOfReturn != null">
        cause_of_return = #{causeOfReturn,jdbcType=VARCHAR},
      </if>
      <if test="rejectedRemarks != null">
        rejected_remarks = #{rejectedRemarks,jdbcType=VARCHAR},
      </if>
      <if test="registrant != null">
        registrant = #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="rejectedTime != null">
        rejected_time = #{rejectedTime,jdbcType=VARCHAR},
      </if>
      <if test="fake != null">
        fake = #{fake,jdbcType=INTEGER},
      </if>
    </set>
    where rejected_id = #{rejectedId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.generator.pojo.PurRejected">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pur_rejected
    set order_account = #{orderAccount,jdbcType=VARCHAR},
      batch_number = #{batchNumber,jdbcType=VARCHAR},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      supper_spec = #{supperSpec,jdbcType=VARCHAR},
      material_name = #{materialName,jdbcType=VARCHAR},
      pit_type = #{pitType,jdbcType=VARCHAR},
      blanking_size = #{blankingSize,jdbcType=VARCHAR},
      width_line = #{widthLine,jdbcType=VARCHAR},
      line_type = #{lineType,jdbcType=INTEGER},
      pur_price = #{purPrice,jdbcType=DOUBLE},
      materials_number = #{materialsNumber,jdbcType=INTEGER},
      rejected_num = #{rejectedNum,jdbcType=INTEGER},
      compensate_money = #{compensateMoney,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE},
      cause_of_return = #{causeOfReturn,jdbcType=VARCHAR},
      rejected_remarks = #{rejectedRemarks,jdbcType=VARCHAR},
      registrant = #{registrant,jdbcType=VARCHAR},
      rejected_time = #{rejectedTime,jdbcType=VARCHAR},
      fake = #{fake,jdbcType=INTEGER}
    where rejected_id = #{rejectedId,jdbcType=INTEGER}
  </update>
  <select id="findByPurReturn" resultType="com.generator.pojo.PurRejected">
    select
    <include refid="Base_Column_List" />
    from pur_rejected
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='rejectedId'">
              and rejected_id
            </when>
            <when test="item.field=='orderAccount'">
              and order_account
            </when>
            <when test="item.field=='batchNumber'">
              and batch_number
            </when>
            <when test="item.field=='purPrice'">
              and pur_price
            </when>
            <when test="item.field=='materialsNumber'">
              and materials_number
            </when>
            <when test="item.field=='rejectedNum'">
              and rejected_num
            </when>
            <when test="item.field=='compensateMoney'">
              and compensate_money
            </when>
            <when test="item.field=='money'">
              and money
            </when>
            <when test="item.field=='causeOfReturn'">
              and cause_of_return
            </when>
            <when test="item.field=='rejectedTime'">
              and rejected_time
            </when>
            <when test="item.field=='supplierName'">
              and supplier_name
            </when>
            <when test="item.field=='supperSpec'">
              and supper_spec
            </when>
            <when test="item.field=='materialName'">
              and material_name
            </when>
            <when test="item.field=='pitType'">
              and pit_type
            </when>
            <when test="item.field=='blankingSize'">
              and blanking_size
            </when>
            <when test="item.field=='widthLine'">
              and width_line
            </when>
            <when test="item.field=='lineType'">
              and line_type
            </when>
            <when test="item.field=='rejectedRemarks'">
              and rejected_remarks
            </when>
            <when test="item.field=='registrant'">
              and registrant
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <if test="orderAccount!=null and orderAccount!=''">
        and order_account=#{orderAccount}
      </if>
      <if test="startTime!=null and startTime!=''">
        and rejected_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and rejected_time&lt;=#{endTime}
      </if>
      and fake=0
    </where>
    order by
    <if test="sort==null or sort==''">
      rejected_id desc
    </if>
    <if test="sort!=null and sort!=''">
      <choose>
        <when test="sort=='orderAccount'">
          order_account
        </when>
        <when test="sort=='batchNumber'">
          batch_number
        </when>
        <when test="sort=='purPrice'">
          pur_price
        </when>
        <when test="sort=='materialsNumber'">
          materials_number
        </when>
        <when test="sort=='rejectedNum'">
          rejected_num
        </when>
        <when test="sort=='compensateMoney'">
          compensate_money
        </when>
        <when test="sort=='difference'">
          difference
        </when>
        <when test="sort=='money'">
          money
        </when>
        <when test="sort=='rejectedTime'">
          rejected_time
        </when>
        <when test="sort=='blankingSize'">
          blanking_size
        </when>
        <when test="sort=='lineType'">
          line_type
        </when>
      </choose>
      <choose>
        <when test="order=='ase'">
          asc
        </when>
        <when test="order=='desc'">
          desc
        </when>
      </choose>
    </if>
    limit #{cur},#{rows}
  </select>
  <select id="findByPurReturnAll" resultType="com.generator.pojo.PurRejected">
    select
    <include refid="Base_Column_List" />
    from pur_rejected
    <where>
      <if test="list!=null">
        <foreach collection="list" item="item" separator=",">
          <choose>
            <when test="item.field=='rejectedId'">
              and rejected_id
            </when>
            <when test="item.field=='orderAccount'">
              and order_account
            </when>
            <when test="item.field=='batchNumber'">
              and batch_number
            </when>
            <when test="item.field=='purPrice'">
              and pur_price
            </when>
            <when test="item.field=='materialsNumber'">
              and materials_number
            </when>
            <when test="item.field=='rejectedNum'">
              and rejected_num
            </when>
            <when test="item.field=='compensateMoney'">
              and compensate_money
            </when>
            <when test="item.field=='money'">
              and money
            </when>
            <when test="item.field=='causeOfReturn'">
              and cause_of_return
            </when>
            <when test="item.field=='rejectedTime'">
              and rejected_time
            </when>
            <when test="item.field=='supplierName'">
              and supplier_name
            </when>
            <when test="item.field=='supperSpec'">
              and supper_spec
            </when>
            <when test="item.field=='materialName'">
              and material_name
            </when>
            <when test="item.field=='pitType'">
              and pit_type
            </when>
            <when test="item.field=='blankingSize'">
              and blanking_size
            </when>
            <when test="item.field=='widthLine'">
              and width_line
            </when>
            <when test="item.field=='lineType'">
              and line_type
            </when>
            <when test="item.field=='rejectedRemarks'">
              and rejected_remarks
            </when>
            <when test="item.field=='registrant'">
              and registrant
            </when>
          </choose>
          <choose>
            <when test="item.op=='contains'">
              like "%"#{item.value}"%"
            </when>
            <when test="item.op=='equal'">
              =#{item.value}
            </when>
            <when test="item.op=='notequal'">
              &lt;&gt;#{item.value}
            </when>
            <when test="item.op=='greater'">
              &gt;#{item.value}
            </when>
            <when test="item.op=='greaterorequal'">
              &gt;=#{item.value}
            </when>
            <when test="item.op=='less'">
              &lt;#{item.value}
            </when>
            <when test="item.op=='lessorequal'">
              &lt;=#{item.value}
            </when>
            <when test="item.op=='beginwith'">
              like #{item.value}"%"
            </when>
            <when test="item.op=='endwith'">
              like "%"#{item.value}
            </when>
          </choose>
        </foreach>
      </if>
      <if test="orderAccount!=null and orderAccount!=''">
        and order_account=#{orderAccount}
      </if>
      <if test="startTime!=null and startTime!=''">
        and rejected_time&gt;=#{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        and rejected_time&lt;=#{endTime}
      </if>
      and fake=0
    </where>
  </select>
</mapper>