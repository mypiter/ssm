package com.generator.mapper;

import com.generator.pojo.ComplexQuery;
import com.generator.pojo.Ticket;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface TicketMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer ticketId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    int insert(Ticket record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    int insertSelective(Ticket record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    Ticket selectByPrimaryKey(Integer ticketId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Ticket record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Ticket record);

    /**
     * 发票列表      加载出所有的发票数据 分页查询
     * @param cur
     * @param rows
     * @param sort
     * @param order
     * @param queryList
     * @param startTime
     * @param endTime
     * @return
     */
    List<Ticket> findByTicket(@Param("cur") int cur, @Param("rows") int rows, @Param("sort") String sort, @Param("order") String order, @Param("list") List<ComplexQuery> queryList, @Param("startTime") String startTime, @Param("endTime") String endTime);

    /**
     * 发票列表      加载出所有的发票数据 查询全部
     * @param queryList
     * @param startTime
     * @param endTime
     * @return
     */
    List<Ticket> findByTicketAll(@Param("list") List<ComplexQuery> queryList, @Param("startTime") String startTime, @Param("endTime") String endTime);

    /**
     * 批量假删除发票记录
     * @param list
     * @return
     */
    int updateFakes(List<Ticket> list);
}